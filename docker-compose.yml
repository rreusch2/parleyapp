version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER:-Predictive Play}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-Predictive Play123}
      POSTGRES_DB: ${DB_NAME:-Predictive Play}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-Predictive Play}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server
  backend:
    build: ./backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3000
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - THEODDS_API_KEY=${THEODDS_API_KEY}
      - PYTHON_ML_SERVER_URL=http://ml-server:8001
    depends_on:
      postgres:
        condition: service_healthy
      ml-server:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  # ML Prediction Server (NEW)
  ml-server:
    build: 
      context: ./python-services/sports-betting-api
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - PYTHON_ML_SERVER=true
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - PORT=8001
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./python-services/sports-betting-api:/app
      - ml_models:/app/models
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: python3 ml_prediction_server.py

  # Redis Cache (Optional but recommended)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  ml_models:
  redis_data:

networks:
  default:
    name: Predictive Play-network 